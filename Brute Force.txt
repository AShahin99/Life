
new_board = dead_state(len(state),len(state[0])) # Create a new board full of zeros with the same dimensions.
    for r in range(len(state)):
        for c in range(len(state[0])):
            # Top row actions
            if(r == 0):
                n=0
                # Top left corner
                if(c == 0):
                    if(state[r+1][c] == 1):
                        n=n+1
                    if(state[r][c+1] == 1):
                        n=n+1
                    if(state[r+1][c+1] == 1):
                        n=n+1
                    # If ALIVE and HOSPITABLE    
                    if((n==2 or n==3) and (state[r][c]==1)):
                        new_board[r][c] = 1
                    # If DEAD and HOSPITABLE
                    if((n==3) and (state[r][c]==0)):
                        new_board[r][c] = 1
                # Top right corner
                elif(c == len(state[0])-1):
                    if(state[r+1][c] == 1):
                        n=n+1
                    if(state[r][c-1] == 1):
                        n=n+1
                    if(state[r+1][c-1] == 1):
                        n=n+1
                    # If ALIVE and HOSPITABLE    
                    if((n==2 or n==3) and (state[r][c]==1)):
                        new_board[r][c] = 1
                    # If DEAD and HOSPITABLE
                    if((n==3) and (state[r][c]==0)):
                        new_board[r][c] = 1
                # Top row middle section
                else: 
                    if(state[r][c-1] == 1):
                        n=n+1
                    if(state[r][c+1] == 1):
                        n=n+1
                    if(state[r+1][c-1] == 1):
                        n=n+1
                    if(state[r+1][c] == 1):
                        n=n+1
                    if(state[r+1][c+1] == 1):
                        n=n+1
                    # If ALIVE and HOSPITABLE    
                    if((n==2 or n==3) and (state[r][c]==1)):
                        new_board[r][c] = 1
                    # If DEAD and HOSPITABLE
                    if((n==3) and (state[r][c]==0)):
                        new_board[r][c] = 1
            # Bottom row actions
            elif(r == len(state)-1):
                n=0
                # Bottom left corner
                if(c == 0):
                    if(state[r-1][c] == 1):
                        n=n+1
                    if(state[r][c+1] == 1):
                        n=n+1
                    if(state[r-1][c+1] == 1):
                        n=n+1
                    # If ALIVE and HOSPITABLE    
                    if((n==2 or n==3) and (state[r][c]==1)):
                        new_board[r][c] = 1
                    # If DEAD and HOSPITABLE
                    if((n==3) and (state[r][c]==0)):
                        new_board[r][c] = 1
                # Bottom right corner
                elif (c == len(state[0])-1):
                    if(state[r-1][c] == 1):
                        n=n+1
                    if(state[r][c-1] == 1):
                        n=n+1
                    if(state[r-1][c-1] == 1):
                        n=n+1
                    # If ALIVE and HOSPITABLE    
                    if((n==2 or n==3) and (state[r][c]==1)):
                        new_board[r][c] = 1
                    # If DEAD and HOSPITABLE
                    if((n==3) and (state[r][c]==0)):
                        new_board[r][c] = 1
                # Bottom row middle section
                else:
                    if(state[r][c-1] == 1):
                        n=n+1
                    if(state[r][c+1] == 1):
                        n=n+1
                    if(state[r-1][c-1] == 1):
                        n=n+1
                    if(state[r-1][c] == 1):
                        n=n+1
                    if(state[r-1][c+1] == 1):
                        n=n+1
                    # If ALIVE and HOSPITABLE
                    if((n==2 or n==3) and (state[r][c]==1)):
                        new_board[r][c] = 1
                    # If DEAD and HOSPITABLE
                    if((n==3) and (state[r][c]==0)):
                        new_board[r][c] = 1
            # Middle rows actions
            else:
                n=0
                # Middle left edge
                if(c == 0):
                    if(state[r-1][c] == 1):
                        n=n+1
                    if(state[r+1][c] == 1):
                        n=n+1
                    if(state[r-1][c+1] == 1):
                        n=n+1
                    if(state[r][c+1] == 1):
                        n=n+1
                    if(state[r+1][c+1] == 1):
                        n=n+1
                    # If ALIVE and HOSPITABLE    
                    if((n==2 or n==3) and (state[r][c]==1)):
                        new_board[r][c] = 1
                    # If DEAD and HOSPITABLE
                    if((n==3) and (state[r][c]==0)):
                        new_board[r][c] = 1
                # Middle right edge
                elif (c == len(state[0])-1):
                    if(state[r-1][c] == 1):
                        n=n+1
                    if(state[r+1][c] == 1):
                        n=n+1
                    if(state[r-1][c-1] == 1):
                        n=n+1
                    if(state[r][c-1] == 1):
                        n=n+1
                    if(state[r+1][c-1] == 1):
                        n=n+1
                    # If ALIVE and HOSPITABLE    
                    if((n==2 or n==3) and (state[r][c]==1)):
                        new_board[r][c] = 1
                    # If DEAD and HOSPITABLE
                    if((n==3) and (state[r][c]==0)):
                        new_board[r][c] = 1
                # Middle row middle section
                else:
                    if(state[r][c-1] == 1):
                        n=n+1
                    if(state[r][c+1] == 1):
                        n=n+1
                    if(state[r-1][c-1] == 1):
                        n=n+1
                    if(state[r-1][c] == 1):
                        n=n+1
                    if(state[r-1][c+1] == 1):
                        n=n+1
                    if(state[r+1][c-1] == 1):
                        n=n+1
                    if(state[r+1][c] == 1):
                        n=n+1
                    if(state[r+1][c+1] == 1):
                        n=n+1    
                    # If ALIVE and HOSPITABLE    
                    if((n==2 or n==3) and (state[r][c]==1)):
                        new_board[r][c] = 1
                    # If DEAD and HOSPITABLE
                    if((n==3) and (state[r][c]==0)):
                        new_board[r][c] = 1
    state = new_board
    return render(new_board)